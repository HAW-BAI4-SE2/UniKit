Test-Datenbank

STUDENT {
	student_number		String (KEY)
	first_name			String
	last_name			String
	email				String
	semester			Integer
}

COURSE {
	id					Integer (KEY)
	name				String
	min_team_size		Integer
	max_team_size		Integer
}

AVAILABLE_COURSES {
	student_number		Integer
	course_id			Integer
}

GROUP {
	id					Integer (KEY)
	group_number		Integer
	course_id			Integer
	max_size			Integer
}

SPACE_OF_TIME {
	group_id			Integer
	start				Date
	end					Date
}



Eigene Datenbank

TEAM {
	id					Integer (KEY)
	course_id			Integer
}

STUDENT_TO_TEAM {
	student_number		Integer
	team_id				Integer
}

// Anmeldungen nach Phase 1
STUDENT_TO_COURSE {
	student_number		Integer
	course_id			Integer
}



=> Hiberate-Schnittstelle nach folgendem Muster:
   http://www.tutorialspoint.com/hibernate/hibernate_examples.htm
   (wenn möglich ohne Setter-Methoden)

=> Alle Java-Hiberate-Klassen bekommen die Bezeichnung Model als Postfix
   z.B. Tabellenname 		= Student
		Java-Klassen-Name	= StudentModel

========================================================

interface Student {
	// MODEL
	public String getStudentNumber();
	public String getFirstName();
	public String getLastName();
	public String getEmail();
	public int getSemester();
	public Collection<Course> getAvailableCourses();
}

interface Course {
	// MODEL
	public int getId();
	public String getName();
	public int getMinTeamSize();
	public int getMaxTeamSize();
}

// Für Jonas: Implementation
class CourseImpl extends CourseModel implements Course {
}

class UserSession {
	// UTILITY CLASS
	public Student getCurrentUser();
}

class StudentUtils {
	// UTILITY CLASS
	public Collection<Student> getStudents();
}

class CourseUtils {
	// UTILITY CLASS
	public Collection<Course> getCourses();
}
